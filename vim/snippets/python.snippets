# numpy test module boilerplate
snippet pjoin
	from os.path import join as pjoin, split as psplit, abspath, dirname
snippet op
	import os.path as op
snippet subp
	from subprocess import Popen, PIPE, check_call
snippet argparse
	from argparse import ArgumentParser, RawDescriptionHelpFormatter


	def get_parser():
	    parser = ArgumentParser(description=__doc__,  # Usage from docstring
	                            formatter_class=RawDescriptionHelpFormatter)
	    parser.add_argument('my_arg',
	                        help='Something about my_arg')
	    return parser


	def main():
	    parser = get_parser()
	    args = parser.parse_args()


	if __name__ == '__main__':
		main()
snippet okcase
	,
	{
	  'code': r"""
	  >>> ${0}
	  True
	  """,
	  'hidden': False,
	  'locked': False
	},
snippet path
	from pathlib import Path
snippet env
	#!/usr/bin/env python3
snippet extra
	#: begin-extra
	{'code': r'''
	>>> True
	${0:${VISUAL}}
	''',
	'hidden': False,
	'locked': False},
	#: end-extra

snippet embed
	import IPython; IPython.embed()
